<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itgaoshu.hospital.mapper.UpplierMapper" >
  <resultMap id="BaseResultMap" type="com.itgaoshu.hospital.bean.Upplier" >
    <id column="supplierId" property="supplierid" jdbcType="INTEGER" />
    <result column="supplierName" property="suppliername" jdbcType="VARCHAR" />
    <result column="supplierPhone" property="supplierphone" jdbcType="VARCHAR" />
    <result column="supplierAddress" property="supplieraddress" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    supplierId, supplierName, supplierPhone, supplierAddress, state
  </sql>
  <select id="queryList" resultType="Upplier">
    select * from upplier
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itgaoshu.hospital.bean.UpplierExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upplier
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from upplier
    where supplierId = #{supplierid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from upplier
    where supplierId = #{supplierid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itgaoshu.hospital.bean.UpplierExample" >
    delete from upplier
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itgaoshu.hospital.bean.Upplier" >
    insert into upplier (supplierId, supplierName, supplierPhone, 
      supplierAddress, state)
    values (#{supplierid,jdbcType=INTEGER}, #{suppliername,jdbcType=VARCHAR}, #{supplierphone,jdbcType=VARCHAR}, 
      #{supplieraddress,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.itgaoshu.hospital.bean.Upplier" >
    insert into upplier
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="supplierid != null" >
        supplierId,
      </if>
      <if test="suppliername != null" >
        supplierName,
      </if>
      <if test="supplierphone != null" >
        supplierPhone,
      </if>
      <if test="supplieraddress != null" >
        supplierAddress,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="supplierid != null" >
        #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="suppliername != null" >
        #{suppliername,jdbcType=VARCHAR},
      </if>
      <if test="supplierphone != null" >
        #{supplierphone,jdbcType=VARCHAR},
      </if>
      <if test="supplieraddress != null" >
        #{supplieraddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itgaoshu.hospital.bean.UpplierExample" resultType="java.lang.Integer" >
    select count(*) from upplier
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update upplier
    <set >
      <if test="record.supplierid != null" >
        supplierId = #{record.supplierid,jdbcType=INTEGER},
      </if>
      <if test="record.suppliername != null" >
        supplierName = #{record.suppliername,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierphone != null" >
        supplierPhone = #{record.supplierphone,jdbcType=VARCHAR},
      </if>
      <if test="record.supplieraddress != null" >
        supplierAddress = #{record.supplieraddress,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update upplier
    set supplierId = #{record.supplierid,jdbcType=INTEGER},
      supplierName = #{record.suppliername,jdbcType=VARCHAR},
      supplierPhone = #{record.supplierphone,jdbcType=VARCHAR},
      supplierAddress = #{record.supplieraddress,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itgaoshu.hospital.bean.Upplier" >
    update upplier
    <set >
      <if test="suppliername != null" >
        supplierName = #{suppliername,jdbcType=VARCHAR},
      </if>
      <if test="supplierphone != null" >
        supplierPhone = #{supplierphone,jdbcType=VARCHAR},
      </if>
      <if test="supplieraddress != null" >
        supplierAddress = #{supplieraddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where supplierId = #{supplierid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itgaoshu.hospital.bean.Upplier" >
    update upplier
    set supplierName = #{suppliername,jdbcType=VARCHAR},
      supplierPhone = #{supplierphone,jdbcType=VARCHAR},
      supplierAddress = #{supplieraddress,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where supplierId = #{supplierid,jdbcType=INTEGER}
  </update>
</mapper>