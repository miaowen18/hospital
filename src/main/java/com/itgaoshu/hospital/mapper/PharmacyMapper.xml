<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itgaoshu.hospital.mapper.PharmacyMapper" >
  <resultMap id="BaseResultMap" type="com.itgaoshu.hospital.bean.Pharmacy" >
    <id column="pharmacyId" property="pharmacyid" jdbcType="INTEGER" />
    <result column="pharmacyName" property="pharmacyname" jdbcType="VARCHAR" />
    <result column="drugstoreId" property="drugstoreid" jdbcType="INTEGER" />
    <result column="skullId" property="skullid" jdbcType="INTEGER" />
    <result column="warehouseId" property="warehouseid" jdbcType="INTEGER" />
    <result column="unit" property="unit" jdbcType="INTEGER" />
    <result column="sellingPrice" property="sellingprice" jdbcType="DOUBLE" />
    <result column="area" property="area" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="produceDate" property="producedate" jdbcType="DATE" />
    <result column="validDate" property="validdate" jdbcType="DATE" />
    <result column="drugstorenum" property="drugstorenum" jdbcType="INTEGER" />
    <result column="skullbatch" property="skullbatch" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pharmacyId, pharmacyName, drugstoreId, skullId, warehouseId, unit, sellingPrice, 
    area, type, produceDate, validDate, drugstorenum, skullbatch
  </sql>
  <select id="queryList" parameterType="PharmacyVo" resultType="PharmacyVo">
    select distinct p.pharmacyId,p.pharmacyname,sk.skullName,un.unitName,p.sellingPrice,
    ar.areaName,t.typeName,p.produceDate,p.validDate,p.skullbatch,p.drugstorenum from pharmacy p,drugstore dr,skull sk,warehuose wh,unit un,area ar,type t
    where  p.skullId=sk.skullId and
    p.warehouseId=wh.warehouseId and p.unit=un.unitId and p.area=ar.areaId and p.type=t.typeId
      <if test="pharmacyname!=null and pharmacyname != ''">
       and p.pharmacyname like concat('%',concat(#{pharmacyname},'%'))
      </if>
      ORDER BY p.pharmacyId asc
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itgaoshu.hospital.bean.PharmacyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pharmacy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pharmacy
    where pharmacyId = #{pharmacyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pharmacy
    where pharmacyId = #{pharmacyid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itgaoshu.hospital.bean.PharmacyExample" >
    delete from pharmacy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itgaoshu.hospital.bean.Pharmacy" >
    insert into pharmacy (pharmacyId, pharmacyName, drugstoreId, 
      skullId, warehouseId, unit, 
      sellingPrice, area, type, 
      produceDate, validDate, drugstorenum, 
      skullbatch)
    values (#{pharmacyid,jdbcType=INTEGER}, #{pharmacyname,jdbcType=VARCHAR}, #{drugstoreid,jdbcType=INTEGER}, 
      #{skullid,jdbcType=INTEGER}, #{warehouseid,jdbcType=INTEGER}, #{unit,jdbcType=INTEGER}, 
      #{sellingprice,jdbcType=DOUBLE}, #{area,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{producedate,jdbcType=DATE}, #{validdate,jdbcType=DATE}, #{drugstorenum,jdbcType=INTEGER}, 
      #{skullbatch,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itgaoshu.hospital.bean.Pharmacy" >
    insert into pharmacy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pharmacyid != null" >
        pharmacyId,
      </if>
      <if test="pharmacyname != null" >
        pharmacyName,
      </if>
      <if test="drugstoreid != null" >
        drugstoreId,
      </if>
      <if test="skullid != null" >
        skullId,
      </if>
      <if test="warehouseid != null" >
        warehouseId,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="sellingprice != null" >
        sellingPrice,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="producedate != null" >
        produceDate,
      </if>
      <if test="validdate != null" >
        validDate,
      </if>
      <if test="drugstorenum != null" >
        drugstorenum,
      </if>
      <if test="skullbatch != null" >
        skullbatch,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pharmacyid != null" >
        #{pharmacyid,jdbcType=INTEGER},
      </if>
      <if test="pharmacyname != null" >
        #{pharmacyname,jdbcType=VARCHAR},
      </if>
      <if test="drugstoreid != null" >
        #{drugstoreid,jdbcType=INTEGER},
      </if>
      <if test="skullid != null" >
        #{skullid,jdbcType=INTEGER},
      </if>
      <if test="warehouseid != null" >
        #{warehouseid,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="sellingprice != null" >
        #{sellingprice,jdbcType=DOUBLE},
      </if>
      <if test="area != null" >
        #{area,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="producedate != null" >
        #{producedate,jdbcType=DATE},
      </if>
      <if test="validdate != null" >
        #{validdate,jdbcType=DATE},
      </if>
      <if test="drugstorenum != null" >
        #{drugstorenum,jdbcType=INTEGER},
      </if>
      <if test="skullbatch != null" >
        #{skullbatch,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itgaoshu.hospital.bean.PharmacyExample" resultType="java.lang.Integer" >
    select count(*) from pharmacy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pharmacy
    <set >
      <if test="record.pharmacyid != null" >
        pharmacyId = #{record.pharmacyid,jdbcType=INTEGER},
      </if>
      <if test="record.pharmacyname != null" >
        pharmacyName = #{record.pharmacyname,jdbcType=VARCHAR},
      </if>
      <if test="record.drugstoreid != null" >
        drugstoreId = #{record.drugstoreid,jdbcType=INTEGER},
      </if>
      <if test="record.skullid != null" >
        skullId = #{record.skullid,jdbcType=INTEGER},
      </if>
      <if test="record.warehouseid != null" >
        warehouseId = #{record.warehouseid,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.sellingprice != null" >
        sellingPrice = #{record.sellingprice,jdbcType=DOUBLE},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.producedate != null" >
        produceDate = #{record.producedate,jdbcType=DATE},
      </if>
      <if test="record.validdate != null" >
        validDate = #{record.validdate,jdbcType=DATE},
      </if>
      <if test="record.drugstorenum != null" >
        drugstorenum = #{record.drugstorenum,jdbcType=INTEGER},
      </if>
      <if test="record.skullbatch != null" >
        skullbatch = #{record.skullbatch,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pharmacy
    set pharmacyId = #{record.pharmacyid,jdbcType=INTEGER},
      pharmacyName = #{record.pharmacyname,jdbcType=VARCHAR},
      drugstoreId = #{record.drugstoreid,jdbcType=INTEGER},
      skullId = #{record.skullid,jdbcType=INTEGER},
      warehouseId = #{record.warehouseid,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=INTEGER},
      sellingPrice = #{record.sellingprice,jdbcType=DOUBLE},
      area = #{record.area,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      produceDate = #{record.producedate,jdbcType=DATE},
      validDate = #{record.validdate,jdbcType=DATE},
      drugstorenum = #{record.drugstorenum,jdbcType=INTEGER},
      skullbatch = #{record.skullbatch,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itgaoshu.hospital.bean.Pharmacy" >
    update pharmacy
    <set >
      <if test="pharmacyname != null" >
        pharmacyName = #{pharmacyname,jdbcType=VARCHAR},
      </if>
      <if test="drugstoreid != null" >
        drugstoreId = #{drugstoreid,jdbcType=INTEGER},
      </if>
      <if test="skullid != null" >
        skullId = #{skullid,jdbcType=INTEGER},
      </if>
      <if test="warehouseid != null" >
        warehouseId = #{warehouseid,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="sellingprice != null" >
        sellingPrice = #{sellingprice,jdbcType=DOUBLE},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="producedate != null" >
        produceDate = #{producedate,jdbcType=DATE},
      </if>
      <if test="validdate != null" >
        validDate = #{validdate,jdbcType=DATE},
      </if>
      <if test="drugstorenum != null" >
        drugstorenum = #{drugstorenum,jdbcType=INTEGER},
      </if>
      <if test="skullbatch != null" >
        skullbatch = #{skullbatch,jdbcType=VARCHAR},
      </if>
    </set>
    where pharmacyId = #{pharmacyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itgaoshu.hospital.bean.Pharmacy" >
    update pharmacy
    set pharmacyName = #{pharmacyname,jdbcType=VARCHAR},
      drugstoreId = #{drugstoreid,jdbcType=INTEGER},
      skullId = #{skullid,jdbcType=INTEGER},
      warehouseId = #{warehouseid,jdbcType=INTEGER},
      unit = #{unit,jdbcType=INTEGER},
      sellingPrice = #{sellingprice,jdbcType=DOUBLE},
      area = #{area,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      produceDate = #{producedate,jdbcType=DATE},
      validDate = #{validdate,jdbcType=DATE},
      drugstorenum = #{drugstorenum,jdbcType=INTEGER},
      skullbatch = #{skullbatch,jdbcType=VARCHAR}
    where pharmacyId = #{pharmacyid,jdbcType=INTEGER}
  </update>
</mapper>