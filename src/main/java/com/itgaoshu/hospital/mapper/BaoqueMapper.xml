<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itgaoshu.hospital.mapper.BaoqueMapper" >
  <resultMap id="BaseResultMap" type="com.itgaoshu.hospital.bean.Baoque" >
    <id column="baoqueid" property="baoqueid" jdbcType="INTEGER" />
    <result column="baoqueName" property="baoquename" jdbcType="VARCHAR" />
    <result column="baoqueNum" property="baoquenum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    baoqueid, baoqueName, baoqueNum
  </sql>
  <select id="selectCount" parameterType="Baoque" resultType="int">
        select count(*)from  baoque where baoquename=#{baoquename}
  </select>
  <update id="updateNum" parameterType="Baoque">
    update baoque set baoquenum =(baoquenum+#{baoquenum}) where baoquename=#{baoquename}
  </update>
  <select id="queryList" resultType="Baoque">
    select * from baoque order by baoqueid asc
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itgaoshu.hospital.bean.BaoqueExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from baoque
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from baoque
    where baoqueid = #{baoqueid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from baoque
    where baoqueid = #{baoqueid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itgaoshu.hospital.bean.BaoqueExample" >
    delete from baoque
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itgaoshu.hospital.bean.Baoque" >
    insert into baoque (baoqueid, baoqueName, baoqueNum
      )
    values (#{baoqueid,jdbcType=INTEGER}, #{baoquename,jdbcType=VARCHAR}, #{baoquenum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.itgaoshu.hospital.bean.Baoque" >
    insert into baoque
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="baoqueid != null" >
        baoqueid,
      </if>
      <if test="baoquename != null" >
        baoqueName,
      </if>
      <if test="baoquenum != null" >
        baoqueNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="baoqueid != null" >
        #{baoqueid,jdbcType=INTEGER},
      </if>
      <if test="baoquename != null" >
        #{baoquename,jdbcType=VARCHAR},
      </if>
      <if test="baoquenum != null" >
        #{baoquenum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itgaoshu.hospital.bean.BaoqueExample" resultType="java.lang.Integer" >
    select count(*) from baoque
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update baoque
    <set >
      <if test="record.baoqueid != null" >
        baoqueid = #{record.baoqueid,jdbcType=INTEGER},
      </if>
      <if test="record.baoquename != null" >
        baoqueName = #{record.baoquename,jdbcType=VARCHAR},
      </if>
      <if test="record.baoquenum != null" >
        baoqueNum = #{record.baoquenum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update baoque
    set baoqueid = #{record.baoqueid,jdbcType=INTEGER},
      baoqueName = #{record.baoquename,jdbcType=VARCHAR},
      baoqueNum = #{record.baoquenum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itgaoshu.hospital.bean.Baoque" >
    update baoque
    <set >
      <if test="baoquename != null" >
        baoqueName = #{baoquename,jdbcType=VARCHAR},
      </if>
      <if test="baoquenum != null" >
        baoqueNum = #{baoquenum,jdbcType=INTEGER},
      </if>
    </set>
    where baoqueid = #{baoqueid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itgaoshu.hospital.bean.Baoque" >
    update baoque
    set baoqueName = #{baoquename,jdbcType=VARCHAR},
      baoqueNum = #{baoquenum,jdbcType=INTEGER}
    where baoqueid = #{baoqueid,jdbcType=INTEGER}
  </update>
</mapper>